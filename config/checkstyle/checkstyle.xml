<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
	<module name="LineLength">
		<property name="max" value="120"/>
	</module>
	<module name="NewlineAtEndOfFile"/>
	
	<module name="SuppressionSingleFilter">
	  <property name="files" value=".+\.(?:html|sql|css|properties|js|map|yarn-integrity)$"/>
	</module>

	<module name="TreeWalker">
		<module name="AvoidStarImport" />
		
		<!-- Höchstens 4 Großbuchstaben als Abkürzung -->
		<module name="AbbreviationAsWordInName"/>
		
		<!-- Annotationen müssen alleine in einer Zeile stehen -->
		<module name="AnnotationLocation">
		  <property name="allowSamelineMultipleAnnotations" value="false"/>
		  <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
		  <property name="allowSamelineParameterizedAnnotation" value="false"/>
		</module>
		
		<!-- Equals Methode muss mit Object als Parameter existieren, wenn equals mit selbem Typ als Param ex. -->
		<module name="CovariantEquals"/>
		
		<!-- Zuerst statische Variablen, dann Instanz, dann Konstruktor, dann Methoden,
			bei Variablen Sichtbarkeit Reihenfolge public, protected, package-private, private -->
		<module name="DeclarationOrder"/>
		
		<!-- Default in Switches immer zuletzt -->
		<module name="DefaultComesLast"/>
		
		<!-- Keine leeren Statements sind erlaubt -->
		<module name="EmptyStatement"/>
		
		<!-- Wenn Equals oder hashcode überschrieben wird, muss auch das andere überschrieben werden -->
		<module name="EqualsHashCode"/>
		
		<!-- String[] args anstatt String args[] -->
		<module name="ArrayTypeStyle"/>
		
		<!-- Kommentare müssen richtig eingerückt sein -->
		<module name="CommentsIndentation"/>
		
		<!-- Switch-Cases mit Code und ohne Break nicht erlaubt, Ausnahme markieren mit "//fallthrough" -->
		<module name="FallThrough"/>
		
		<!-- Keine inneren Assignments -->
		<module name="InnerAssignment"/>
		
		<!-- Switches müssen Default Case haben -->
		<module name="MissingSwitchDefault"/>
		
		<!-- laufvariable darf nicht verändert werden, außer in for( : ) loops-->
		<module name="ModifiedControlVariable">
		  <property name="skipEnhancedForLoopVariable" value="true"/>
		</module>
		
		<!-- Eine variablendeklaration pro Zeile erlaubt -->
		<module name="MultipleVariableDeclarations"/>
		
		<!-- Kein Trailing Komma in Arrays und Enums-->
		<module name="NoArrayTrailingComma"/>
		<module name="NoEnumTrailingComma"/>
		
		<module name="MissingOverride"/>
		
		<module name="PackageAnnotation"/>
		<module name="AvoidNestedBlocks"/>
		<module name="EmptyBlock"/>
		<module name="EmptyCatchBlock" />
		<module name="LeftCurly"/>
		<module name="NeedBraces"/>
		<module name="RightCurly"/>
		<module name="InnerTypeLast"/>
		<module name="OneTopLevelClass"/>
		<module name="NoFinalizer"/>
		<module name="OneStatementPerLine"/>
		<module name="OverloadMethodsDeclarationOrder"/>
		<module name="PackageDeclaration"/>
		<module name="RequireThis"/>
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="UnnecessaryParentheses"/>
		<module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
		<module name="UnnecessarySemicolonInEnumeration"/>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<module name="OuterTypeFilename"/>
		<module name="UpperEll"/>
		<module name="ModifierOrder"/>
		
		<module name="ConstantName"/>
		<module name="StaticVariableName"/>
		<module name="ParameterName"/>
		<module name="PackageName">
		  <property name="format"
		    value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
		</module>
		<module name="MethodName"/>
		<module name="MemberName"/>
		<module name="LocalVariableName">
		  <property name="allowOneCharVarInForLoop" value="true"/>
		</module>
		<module name="LocalFinalVariableName"/>
		<module name="LambdaParameterName"/>
		<module name="CatchParameterName" />
		<module name="ClassTypeParameterName"/>
		<module name="InterfaceTypeParameterName"/>
		<module name="MethodTypeParameterName"/>
		<module name="TypeName"/>
		<module name="EmptyForInitializerPad"/>
		<module name="EmptyForIteratorPad"/>
		<module name="EmptyLineSeparator"/>
		<module name="GenericWhitespace"/>
		<module name="MethodParamPad"/>
		<module name="NoLineWrap"/>
		<module name="NoWhitespaceAfter"/>
		<module name="NoWhitespaceBefore"/>
		<module name="OperatorWrap"/>
		<module name="ParenPad"/>
		<module name="SeparatorWrap">
		  <property name="tokens" value="DOT"/>
		  <property name="option" value="nl"/>
		</module>
		<module name="SeparatorWrap">
		  <property name="tokens" value="COMMA"/>
		  <property name="option" value="eol"/>
		</module>
		<module name="SingleSpaceSeparator"/>
		<module name="TypecastParenPad"/>
		<module name="WhitespaceAfter"/>
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true"/>
			<property name="allowEmptyMethods" value="true"/>
			<property name="allowEmptyTypes" value="true"/>
			<property name="allowEmptyLoops" value="true"/>
			<property name="allowEmptyLambdas" value="true"/>
			<property name="allowEmptyCatches" value="true"/>
			<property name="ignoreEnhancedForColon" value="true"/>
		</module>
		<module name="Indentation">
		  <property name="basicOffset" value="8"/>
		  <property name="throwsIndent" value="8"/>
		  <property name="arrayInitIndent" value="8"/>
		  <property name="lineWrappingIndentation" value="8"/>
		  <property name="caseIndent" value="0"/>
		</module>
	</module>
</module>